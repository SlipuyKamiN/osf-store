{"version":3,"file":"static/js/389.3cb109ad.chunk.js","mappings":"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","sources":["hooks/useLocationPath.jsx","components/CategoryLanding/BreadCrumbs.styled.jsx","components/CategoryLanding/BreadCrumbs.jsx","components/CategoryLanding/CategoryItemsList.styled.jsx","components/CategoryLanding/Filters.styled.jsx","components/Homepage/FeaturedProducts/FeaturedProducts.styled.jsx","components/ProductTiles/BasicTile.jsx","components/Homepage/FeaturedProducts/FeaturedProducts.jsx","components/ProductTiles/BasicTile.styled.jsx","components/ProductTiles/PricedTile.jsx","components/ProductTiles/PricedTile.styled.jsx","components/CategoryLanding/Filters.jsx","components/CategoryLanding/CategoryItemsList.jsx","components/CategoryLanding/Services.jsx","pages/CategoryLanding/CategoryLanding.jsx"],"sourcesContent":["import { useLocation, useParams } from 'react-router-dom';\n\nconst useLocationPath = () => {\n  const { productTitle } = useParams();\n  const location = useLocation();\n  const locationPath = [{ name: 'Home', pathName: '/' }];\n  const pathNames = location.pathname\n    .split('/')\n    .filter(pathname => pathname !== '');\n\n  if (productTitle) {\n    locationPath.push(\n      { pathName: '/', name: 'OSF-Theme' },\n      { pathName: '/', name: productTitle }\n    );\n\n    return [locationPath];\n  }\n\n  pathNames.forEach(pathName => {\n    locationPath.push({ name: pathName.replace(/-|%20/g, ' '), pathName });\n  });\n\n  return [locationPath];\n};\n\nexport default useLocationPath;\n","import styled from '@emotion/styled';\nimport { colors } from 'styles/common/vars';\n\nexport const BreadCrumbsSection = styled.section`\n  padding: ${props => props.padding[0]};\n\n  @media screen and (min-width: 1280px) {\n    padding: ${props => props.padding[1]};\n  }\n`;\n\nexport const HistoryList = styled.ul`\n  display: flex;\n  justify-content: center;\n  gap: 15px;\n  text-transform: capitalize;\n\n  font-size: 13px;\n\n  color: ${colors.accentGreen};\n`;\n\nexport const HistoryListItem = styled.li`\n  &:not(:first-of-type)::before {\n    content: '/';\n    font-weight: 600;\n    margin-right: 15px;\n  }\n\n  &:last-child {\n    color: ${colors.fontGray};\n    display: inline-block;\n    pointer-events: none;\n  }\n`;\n","import useLocationPath from 'hooks/useLocationPath';\nimport {\n  BreadCrumbsSection,\n  HistoryList,\n  HistoryListItem,\n} from './BreadCrumbs.styled';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst BreadCrumbs = ({ padding }) => {\n  const [locationPath] = useLocationPath();\n\n  return (\n    <BreadCrumbsSection padding={padding}>\n      <HistoryList>\n        {locationPath.map(({ name, pathName }) => (\n          <HistoryListItem key={name}>\n            {<Link to={pathName}>{name}</Link>}\n          </HistoryListItem>\n        ))}\n      </HistoryList>\n    </BreadCrumbsSection>\n  );\n};\n\nexport default BreadCrumbs;\n\nBreadCrumbs.propTypes = {\n  padding: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n","import styled from '@emotion/styled';\nimport { colors, transition } from 'styles/common/vars';\n\nexport const CategoryListSection = styled.section`\n  padding: 0;\n  text-align: center;\n\n  padding: 21px 0 50px;\n\n  @media screen and (min-width: 1280px) {\n    padding: 31px 0 75px;\n  }\n`;\n\nexport const CategoryList = styled.ul`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-wrap: wrap;\n  gap: 27px;\n\n  & > li {\n    width: 293px;\n\n    @media screen and (min-width: 1280px) {\n      width: 270px;\n    }\n  }\n`;\n\nexport const LoadMoreButton = styled.button`\n  width: 156px;\n  height: 39px;\n  margin: 0;\n  margin-top: 47px;\n  border-radius: 20px;\n\n  text-align: center;\n  text-transform: uppercase;\n\n  color: ${colors.primaryWhite};\n  background-color: ${colors.accentGreen};\n\n  border: 2px solid RGBA(217, 217, 217, 1);\n\n  transition: background-color ${transition.duration},\n    border-color ${transition.duration}, color ${transition.duration};\n\n  @media screen and (min-width: 1280px) {\n    margin-top: 117px;\n  }\n\n  &:hover,\n  &:focus {\n    background-color: ${colors.primaryWhite};\n    border-color: ${colors.accentGreen};\n    color: ${colors.accentGreen};\n  }\n`;\n","import styled from '@emotion/styled';\nimport { colors } from 'styles/common/vars';\n\nexport const FilterSection = styled.section`\n  padding: 0;\n  width: 100%;\n  text-align: center;\n  font-size: 14px;\n`;\n\nexport const ToggleFilterButton = styled.button`\n  margin: 0 auto 21px;\n\n  border: none;\n  background-color: transparent;\n  color: ${colors.hideFilterGreen};\n`;\n\nexport const FilterForm = styled.form`\n  width: 100%;\n  border-radius: 6px;\n  padding: 15px;\n  background-color: ${colors.primaryWhite};\n  margin-bottom: 21px;\n\n  & > div {\n    margin-bottom: 26px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    display: flex;\n    justify-content: space-between;\n    flex-wrap: wrap;\n    margin-bottom: 30px;\n\n    & > div {\n      margin-bottom: 0;\n    }\n  }\n`;\n\nexport const SelectWrapper = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  flex-shrink: 1;\n\n  @media screen and (min-width: 1280px) {\n    width: 263px;\n  }\n\n  &:not(:last-child) {\n    margin-bottom: 26px;\n\n    @media screen and (min-width: 1280px) {\n      margin-bottom: 28px;\n    }\n  }\n\n  &::before {\n    position: absolute;\n    color: ${colors.fontGray};\n    opacity: 0.5;\n    right: 18px;\n  }\n\n  & label {\n    font-family: 'Lato';\n  }\n`;\n\nexport const Select = styled.select`\n  width: 200px;\n  height: 35px;\n  padding: 5px 21px;\n\n  font-size: 14px;\n  cursor: pointer;\n\n  border: 2px solid RGBA(69, 65, 62, 0.5);\n  border-radius: 20px;\n  appearance: none;\n\n  color: ${colors.fontGray};\n  background-color: transparent;\n`;\n\nexport const ColorPickerWrapper = styled.div`\n  padding: 0 10px;\n`;\n\nexport const ColorPickerButton = styled.input`\n  appearance: none;\n  background-color: #fff;\n  color: ${props => props.value};\n  background-color: ${props => props.value};\n  width: 17px;\n  height: 17px;\n  border-radius: 50%;\n\n  &:checked {\n    border: 3px solid ${colors.fontGray};\n  }\n\n  &:not(:last-child) {\n    margin-right: 7px;\n  }\n`;\n\nexport const ResultCounter = styled.p`\n  text-align: center;\n`;\n","import styled from '@emotion/styled';\nimport { colors } from 'styles/common/vars';\n\nexport const FeaturedSection = styled.section`\n  display: none;\n  padding-top: 46px;\n  padding-bottom: 64px;\n\n  color: ${colors.primaryWhite};\n  background-color: ${colors.primaryBg};\n  text-align: center;\n\n  @media screen and (min-width: 1280px) {\n    display: block;\n  }\n`;\nexport const SectionTitle = styled.h2`\n  font-size: 36px;\n  font-weight: 900;\n  margin-bottom: 23px;\n`;\n\nexport const SectionSubTitle = styled.p`\n  font-size: 16px;\n  margin-bottom: 26px;\n`;\n\nexport const SwiperControls = styled.span`\n  display: flex;\n  gap: 10px;\n  align-items: center;\n  justify-content: space-between;\n  width: 530px;\n\n  margin: 0 auto;\n  margin-bottom: 24px;\n\n  font-size: 23px;\n  font-weight: 600;\n\n  color: ${colors.primaryWhite};\n\n  @media screen and (min-width: 1280px) {\n    font-size: 24px;\n  }\n\n  &::before,\n  &::after {\n    content: '';\n    display: block;\n    background-color: ${colors.primaryWhite};\n    flex-grow: 1;\n    height: 3px;\n  }\n`;\n","import {\n  Image,\n  BasicCard,\n  BasicDescription,\n  BasicLabel,\n  BasicTitle,\n} from './BasicTile.styled';\nimport PropTypes from 'prop-types';\n\nconst BasicTile = ({ item: { imageUrl, title, label } }) => {\n  return (\n    <BasicCard>\n      <Image src={imageUrl} alt={title} width=\"270px\" />\n      <BasicDescription>\n        <BasicTitle>{title}</BasicTitle>\n        <BasicLabel>{label}</BasicLabel>\n      </BasicDescription>\n    </BasicCard>\n  );\n};\n\nexport default BasicTile;\n\nBasicTile.propTypes = {\n  item: PropTypes.exact({\n    id: PropTypes.string,\n    title: PropTypes.string.isRequired,\n    imageUrl: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    price: PropTypes.number,\n    buyNow: PropTypes.bool,\n    description: PropTypes.string,\n    comment: PropTypes.object,\n  }).isRequired,\n};\n","import {\n  FeaturedSection,\n  SectionSubTitle,\n  SectionTitle,\n  SwiperControls,\n} from './FeaturedProducts.styled';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport 'swiper/css';\nimport 'swiper/css/navigation';\nimport { Navigation, Autoplay } from 'swiper/modules';\nimport BasicTile from 'components/ProductTiles/BasicTile';\nimport { useProducts } from 'context/ProductsContext';\n\nconst FeaturedProducts = () => {\n  const { allProducts } = useProducts();\n\n  return (\n    <FeaturedSection>\n      <SectionTitle>Featured Products</SectionTitle>\n      <SectionSubTitle>\n        Unde omnis iste natus error sit voluptatem\n      </SectionSubTitle>\n      <SwiperControls>{'///'}</SwiperControls>\n      <Swiper\n        spaceBetween={50}\n        navigation={true}\n        modules={[Navigation, Autoplay]}\n        slidesPerView={4}\n        slidesPerGroup={4}\n        autoplay={{ delay: 5000 }}\n        rewind={true}\n      >\n        {allProducts.map(item => (\n          <SwiperSlide key={item.title + item.price}>\n            <BasicTile item={item} />\n          </SwiperSlide>\n        ))}\n      </Swiper>\n    </FeaturedSection>\n  );\n};\n\nexport default FeaturedProducts;\n","import styled from '@emotion/styled';\nimport { colors } from 'styles/common/vars';\n\nexport const BasicCard = styled.li`\n  position: relative;\n  width: 270px;\n  height: 368px;\n  border-radius: 6px;\n  overflow: hidden;\n  text-align: center;\n`;\n\nexport const Image = styled.img`\n  width: 100%;\n  height: 261px;\n`;\n\nexport const BasicDescription = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n\n  width: 100%;\n  height: 107px;\n  padding: 20px;\n\n  background-color: ${colors.primaryWhite};\n`;\n\nexport const BasicTitle = styled.h4`\n  font-size: 16px;\n  font-weight: 400;\n  color: ${colors.fontGray};\n`;\n\nexport const BasicLabel = styled.p`\n  font-size: 14px;\n  font-weight: 900;\n  text-transform: capitalize;\n  color: ${colors.accentGreen};\n`;\n","import { useProducts } from 'context/ProductsContext';\nimport { Image } from './BasicTile.styled';\nimport {\n  AddButton,\n  Price,\n  PricedCard,\n  PricedDescription,\n  PricedTitle,\n} from './PricedTile.styled';\nimport PropTypes from 'prop-types';\nimport { notification } from 'components/Global/notification';\n\nconst PricedTile = ({\n  item: { imageUrl, title, price },\n  item,\n  className = null,\n}) => {\n  const { reducer } = useProducts();\n\n  const handleAddItem = type => {\n    const response = reducer(`${type}/add`, { ...item, orderQuantity: 1 });\n\n    if (response) return notification(response);\n\n    notification(\n      `Item \"${item.title}\" has been added to your ${type}`,\n      'success'\n    );\n  };\n\n  return (\n    <PricedCard className={className}>\n      <Image src={imageUrl} alt={title} width=\"270px\" />\n      <PricedDescription>\n        <PricedTitle>{title}</PricedTitle>\n        <Price>$ {price}</Price>\n        <ul className=\"overlay\">\n          <li>\n            <AddButton\n              type=\"button\"\n              className=\"icon-plus\"\n              onClick={() => handleAddItem('cart')}\n            ></AddButton>\n          </li>\n          <li>\n            <AddButton\n              type=\"button\"\n              className=\"icon-heart-red\"\n              onClick={() => handleAddItem('wishlist')}\n            ></AddButton>\n          </li>\n        </ul>\n      </PricedDescription>\n    </PricedCard>\n  );\n};\n\nexport default PricedTile;\n\nPricedTile.propTypes = {\n  item: PropTypes.exact({\n    id: PropTypes.string,\n    title: PropTypes.string.isRequired,\n    imageUrl: PropTypes.string.isRequired,\n    price: PropTypes.number.isRequired,\n    buyNow: PropTypes.bool,\n    label: PropTypes.string,\n    description: PropTypes.string,\n    comment: PropTypes.object,\n  }).isRequired,\n  className: PropTypes.string,\n};\n","import styled from '@emotion/styled';\nimport { BasicCard, BasicDescription, BasicTitle } from './BasicTile.styled';\nimport { colors, transition } from 'styles/common/vars';\n\nexport const PricedCard = styled(BasicCard)`\n  &.price-gray p {\n    color: ${colors.priceGrayColor};\n  }\n\n  &:hover,\n  &:focus {\n    .overlay {\n      opacity: 1;\n      transform: translateY(0);\n    }\n  }\n`;\n\nexport const PricedTitle = styled(BasicTitle)`\n  color: ${colors.pricedCardTitle};\n`;\n\nexport const PricedDescription = styled(BasicDescription)`\n  padding-bottom: 20px;\n\n  .overlay {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: RGBA(35, 196, 110, 0.8);\n    opacity: 0;\n\n    transform: translateY(-100%);\n\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 19px;\n\n    transition: opacity ${transition.duration}, transform ${transition.duration};\n  }\n`;\n\nexport const AddButton = styled.button`\n  display: block;\n  width: 93px;\n  height: 93px;\n  border-radius: 50%;\n  padding: 29px;\n  padding-top: 33px;\n\n  border: none;\n\n  text-align: center;\n  font-size: 31px;\n\n  background-color: ${colors.primaryWhite};\n\n  transition: opacity ${transition.duration};\n  &:hover,\n  &:focus {\n    opacity: 0.6;\n  }\n`;\n\nexport const Price = styled.p`\n  font-size: 14px;\n  color: ${colors.priceColor};\n`;\n","import {\n  ColorPickerButton,\n  FilterForm,\n  FilterSection,\n  Select,\n  SelectWrapper,\n  ToggleFilterButton,\n  ResultCounter,\n  ColorPickerWrapper,\n} from './Filters.styled';\nimport PropTypes from 'prop-types';\nimport useWindowDimensions from 'hooks/useWindowDimensions';\nimport { useState } from 'react';\n\nconst Filter = ({ allProducts }) => {\n  const { width } = useWindowDimensions();\n  const [isFilterOpened, setIsFilterOpened] = useState(true);\n  const [selectedColor, setSelectedColor] = useState('#FFFFFF');\n  const isMobileScreen = width < 768;\n  const showFilter = (isMobileScreen && isFilterOpened) || !isMobileScreen;\n  const toggleFilter = () => {\n    setIsFilterOpened(prevState => !prevState);\n  };\n  const handleColorChange = event => {\n    setSelectedColor(event.target.value);\n  };\n\n  return (\n    <FilterSection>\n      {isMobileScreen && (\n        <ToggleFilterButton type=\"button\" onClick={toggleFilter}>\n          {isFilterOpened ? 'Hide filter' : 'Show filter'}\n        </ToggleFilterButton>\n      )}\n      {showFilter && (\n        <FilterForm autoComplete=\"off\">\n          <div>\n            <SelectWrapper className=\"icon-caret-down\">\n              <label htmlFor=\"price\">Price</label>\n              <Select name=\"Price\" id=\"price\">\n                <option value=\"0-100\">$0 - $100</option>\n                <option value=\"100-500\">$100 - $500</option>\n                <option value=\">100\">&gt; $500</option>\n              </Select>\n            </SelectWrapper>\n            <SelectWrapper>\n              <label htmlFor=\"color\">Color</label>\n              <ColorPickerWrapper>\n                <ColorPickerButton\n                  onChange={handleColorChange}\n                  checked={selectedColor === '#FFFFFF'}\n                  type=\"radio\"\n                  name=\"color\"\n                  value=\"#FFFFFF\"\n                />\n                <ColorPickerButton\n                  onChange={handleColorChange}\n                  checked={selectedColor === '#43C0CF'}\n                  type=\"radio\"\n                  name=\"color\"\n                  value=\"#43C0CF\"\n                />\n                <ColorPickerButton\n                  onChange={handleColorChange}\n                  checked={selectedColor === '#3D402F'}\n                  type=\"radio\"\n                  name=\"color\"\n                  value=\"#3D402F\"\n                />\n                <ColorPickerButton\n                  onChange={handleColorChange}\n                  checked={selectedColor === '#4AAF00'}\n                  type=\"radio\"\n                  name=\"color\"\n                  value=\"#4AAF00\"\n                />\n                <ColorPickerButton\n                  onChange={handleColorChange}\n                  checked={selectedColor === '#315BBD'}\n                  type=\"radio\"\n                  name=\"color\"\n                  value=\"#315BBD\"\n                />\n                <ColorPickerButton\n                  onChange={handleColorChange}\n                  checked={selectedColor === '#EC6115'}\n                  type=\"radio\"\n                  name=\"color\"\n                  value=\"#EC6115\"\n                />\n                <ColorPickerButton\n                  onChange={handleColorChange}\n                  checked={selectedColor === '#DC041D'}\n                  type=\"radio\"\n                  name=\"color\"\n                  value=\"#DC041D\"\n                />\n                <ColorPickerButton\n                  onChange={handleColorChange}\n                  checked={selectedColor === '#EFEAD7'}\n                  type=\"radio\"\n                  name=\"color\"\n                  value=\"#EFEAD7\"\n                />\n              </ColorPickerWrapper>\n            </SelectWrapper>\n          </div>\n          <div>\n            <SelectWrapper className=\"icon-caret-down\">\n              <label htmlFor=\"brands\">Brands</label>\n              <Select name=\"brands\" id=\"brands\">\n                <option value=\"Ukraine sport\">Ukraine sport</option>\n                <option value=\"M-TAC\">M-TAC</option>\n                <option value=\"Riot division\">Riot division</option>\n              </Select>\n            </SelectWrapper>\n            <SelectWrapper className=\"icon-caret-down\">\n              <label htmlFor=\"sortBy\">Sort by</label>\n              <Select name=\"sortBy\" id=\"sortBy\">\n                <option value=\"Price\">Price</option>\n                <option value=\"Size\">Size</option>\n                <option value=\"Brand\">Brand</option>\n              </Select>\n            </SelectWrapper>\n          </div>\n          <div>\n            <SelectWrapper className=\"icon-caret-down\">\n              <label htmlFor=\"size\">Size</label>\n              <Select name=\"size\" id=\"size\">\n                <option value=\"Small\">Small</option>\n                <option value=\"Medium\">Medium</option>\n                <option value=\"Large\">Large</option>\n              </Select>\n            </SelectWrapper>\n            <SelectWrapper className=\"icon-caret-down\">\n              <label htmlFor=\"show\">Show</label>\n              <Select name=\"show\" id=\"show\">\n                <option value=\"16\">16 per page</option>\n                <option value=\"8\">8 per page</option>\n                <option value=\"4\">4 per page</option>\n              </Select>\n            </SelectWrapper>\n          </div>\n        </FilterForm>\n      )}\n      <ResultCounter>{allProducts.length} results in apparel</ResultCounter>\n    </FilterSection>\n  );\n};\n\nexport default Filter;\n\nFilter.propTypes = {\n  allProducts: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n","import { useState } from 'react';\nimport {\n  CategoryList,\n  CategoryListSection,\n  LoadMoreButton,\n} from './CategoryItemsList.styled';\nimport PropTypes from 'prop-types';\nimport PricedTile from 'components/ProductTiles/PricedTile';\n\nconst CategoryItemsList = ({ allProducts }) => {\n  const [isLastPage, setIsLastPage] = useState(false);\n  const [page, setPage] = useState(1);\n\n  const itemsToRender = allProducts.slice(0, page * 8);\n\n  const incrementPage = () => {\n    if (isLastPage) {\n      return;\n    }\n\n    setPage(prevPage => {\n      if ((prevPage + 1) * 8) {\n        setIsLastPage(true);\n      }\n\n      return prevPage + 1;\n    });\n  };\n\n  return (\n    <CategoryListSection>\n      <CategoryList>\n        {itemsToRender.map(item => (\n          <PricedTile key={item.id} item={item} className=\"price-gray\" />\n        ))}\n      </CategoryList>\n      {!isLastPage && (\n        <LoadMoreButton type=\"button\" onClick={incrementPage}>\n          Load more\n        </LoadMoreButton>\n      )}\n    </CategoryListSection>\n  );\n};\n\nexport default CategoryItemsList;\n\nCategoryItemsList.propTypes = {\n  allProducts: PropTypes.arrayOf(PropTypes.objectOf).isRequired,\n};\n","import { useProducts } from 'context/ProductsContext';\nimport BreadCrumbs from './BreadCrumbs';\nimport Filter from './Filters';\nimport { ServicesTitle } from './Services.styled';\nimport CategoryItemsList from './CategoryItemsList';\n\nconst Services = () => {\n  const { allProducts } = useProducts();\n\n  return (\n    <section>\n      <BreadCrumbs padding={['24px 0 34px', '30px 0']} />\n      <ServicesTitle>Services</ServicesTitle>\n      <Filter allProducts={allProducts} />\n      <CategoryItemsList allProducts={allProducts} />\n    </section>\n  );\n};\n\nexport default Services;\n","import Services from 'components/CategoryLanding/Services';\nimport { ServicesMain } from 'components/CategoryLanding/Services.styled';\nimport FeaturedProducts from 'components/Homepage/FeaturedProducts/FeaturedProducts';\n\nconst CategoryLanding = () => {\n  return (\n    <ServicesMain>\n      <Services />\n      <FeaturedProducts />\n    </ServicesMain>\n  );\n};\n\nexport default CategoryLanding;\n"],"names":["productTitle","useParams","location","useLocation","locationPath","name","pathName","pathNames","pathname","split","filter","push","forEach","replace","BreadCrumbsSection","styled","props","padding","HistoryList","colors","HistoryListItem","useLocationPath","map","to","CategoryListSection","CategoryList","LoadMoreButton","transition","FilterSection","ToggleFilterButton","FilterForm","SelectWrapper","Select","ColorPickerWrapper","ColorPickerButton","value","ResultCounter","FeaturedSection","SectionTitle","SectionSubTitle","SwiperControls","item","imageUrl","title","label","src","alt","width","allProducts","useProducts","spaceBetween","navigation","modules","Navigation","Autoplay","slidesPerView","slidesPerGroup","autoplay","delay","rewind","price","BasicCard","Image","BasicDescription","BasicTitle","BasicLabel","className","reducer","handleAddItem","type","response","orderQuantity","notification","onClick","PricedCard","PricedTitle","PricedDescription","AddButton","Price","useWindowDimensions","useState","isFilterOpened","setIsFilterOpened","selectedColor","setSelectedColor","isMobileScreen","showFilter","handleColorChange","event","target","prevState","autoComplete","htmlFor","id","onChange","checked","length","isLastPage","setIsLastPage","page","setPage","itemsToRender","slice","PricedTile","prevPage","BreadCrumbs","FeaturedProducts"],"sourceRoot":""}