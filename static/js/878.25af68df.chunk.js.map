{"version":3,"file":"static/js/878.25af68df.chunk.js","mappings":"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","sources":["hooks/useLocationPath.jsx","components/CategoryLanding/BreadCrumbs.styled.jsx","components/CategoryLanding/BreadCrumbs.jsx","components/CategoryLanding/CategoryItemsList.styled.jsx","components/CategoryLanding/Filters.styled.jsx","components/Global/ItemCounter.styled.jsx","components/Global/ItemCounter.jsx","components/ProductTiles/BasicTile.jsx","components/ProductTiles/BasicTile.styled.jsx","components/ProductTiles/MobileGalleryTile.styled.jsx","components/ProductTiles/MobileGalleryTile.jsx","components/ProductTiles/PricedTile.styled.jsx","components/ProductDetailed/PopularItems.styled.jsx","components/ProductDetailed/PopularItems.jsx","components/ProductDetailed/ProductDetails.styled.jsx","components/ProductDetailed/ProductTabs.styled.jsx","components/ProductDetailed/ProductTabs.jsx","components/ProductDetailed/ProductData.styled.jsx","components/ProductDetailed/ProductData.jsx","data/productDetails.js","components/ProductDetailed/ProductGallery.jsx","components/ProductDetailed/ProductDetails.jsx","components/ProductDetailed/ScrollToTop.styled.jsx","components/ProductDetailed/ScrollToTop.jsx","pages/ProductDetailed/ProductDetailed.jsx"],"sourcesContent":["import { useLocation, useParams } from 'react-router-dom';\n\nconst useLocationPath = () => {\n  const { productTitle } = useParams();\n  const location = useLocation();\n  const locationPath = [{ name: 'Home', pathName: '/' }];\n  const pathNames = location.pathname\n    .split('/')\n    .filter(pathname => pathname !== '');\n\n  if (productTitle) {\n    locationPath.push(\n      { pathName: '/', name: 'OSF-Theme' },\n      { pathName: '/', name: productTitle }\n    );\n\n    return [locationPath];\n  }\n\n  pathNames.forEach(pathName => {\n    locationPath.push({ name: pathName.replace(/-|%20/g, ' '), pathName });\n  });\n\n  return [locationPath];\n};\n\nexport default useLocationPath;\n","import styled from '@emotion/styled';\nimport { colors } from 'styles/common/vars';\n\nexport const BreadCrumbsSection = styled.section`\n  padding: ${props => props.padding[0]};\n\n  @media screen and (min-width: 1280px) {\n    padding: ${props => props.padding[1]};\n  }\n`;\n\nexport const HistoryList = styled.ul`\n  display: flex;\n  justify-content: center;\n  gap: 15px;\n  text-transform: capitalize;\n\n  font-size: 13px;\n\n  color: ${colors.accentGreen};\n`;\n\nexport const HistoryListItem = styled.li`\n  &:not(:first-of-type)::before {\n    content: '/';\n    font-weight: 600;\n    margin-right: 15px;\n  }\n\n  &:last-child {\n    color: ${colors.fontGray};\n    display: inline-block;\n    pointer-events: none;\n  }\n`;\n","import useLocationPath from 'hooks/useLocationPath';\nimport {\n  BreadCrumbsSection,\n  HistoryList,\n  HistoryListItem,\n} from './BreadCrumbs.styled';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst BreadCrumbs = ({ padding }) => {\n  const [locationPath] = useLocationPath();\n\n  return (\n    <BreadCrumbsSection padding={padding}>\n      <HistoryList>\n        {locationPath.map(({ name, pathName }) => (\n          <HistoryListItem key={name}>\n            {<Link to={pathName}>{name}</Link>}\n          </HistoryListItem>\n        ))}\n      </HistoryList>\n    </BreadCrumbsSection>\n  );\n};\n\nexport default BreadCrumbs;\n\nBreadCrumbs.propTypes = {\n  padding: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n","import styled from '@emotion/styled';\nimport { colors, transition } from 'styles/common/vars';\n\nexport const CategoryListSection = styled.section`\n  padding: 0;\n  text-align: center;\n\n  padding: 21px 0 50px;\n\n  @media screen and (min-width: 1280px) {\n    padding: 31px 0 75px;\n  }\n`;\n\nexport const CategoryList = styled.ul`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-wrap: wrap;\n  gap: 27px;\n\n  & > li {\n    width: 293px;\n\n    @media screen and (min-width: 1280px) {\n      width: 270px;\n    }\n  }\n`;\n\nexport const LoadMoreButton = styled.button`\n  width: 156px;\n  height: 39px;\n  margin: 0;\n  margin-top: 47px;\n  border-radius: 20px;\n\n  text-align: center;\n  text-transform: uppercase;\n\n  color: ${colors.primaryWhite};\n  background-color: ${colors.accentGreen};\n\n  border: 2px solid RGBA(217, 217, 217, 1);\n\n  transition: background-color ${transition.duration},\n    border-color ${transition.duration};\n\n  @media screen and (min-width: 1280px) {\n    margin-top: 117px;\n  }\n\n  &:hover,\n  &:focus {\n    background-color: ${colors.accentBlue};\n    border-color: ${colors.accentGreen};\n  }\n`;\n","import styled from '@emotion/styled';\nimport { colors } from 'styles/common/vars';\n\nexport const FilterSection = styled.section`\n  padding: 0 13px;\n  width: 100%;\n  text-align: center;\n  font-size: 14px;\n\n  @media screen and (min-width: 1280px) {\n    padding: 0 54px;\n  }\n`;\n\nexport const ToggleFilterButton = styled.button`\n  margin: 0 auto 21px;\n\n  border: none;\n  background-color: transparent;\n  color: ${colors.accentGreen};\n`;\n\nexport const FilterForm = styled.form`\n  width: 100%;\n  border-radius: 6px;\n  padding: 15px;\n  background-color: ${colors.primaryWhite};\n  margin-bottom: 21px;\n\n  & > div {\n    margin-bottom: 26px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    display: flex;\n    justify-content: space-between;\n    flex-wrap: wrap;\n    margin-bottom: 30px;\n\n    & > div {\n      margin-bottom: 0;\n    }\n  }\n`;\n\nexport const SelectWrapper = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  flex-shrink: 1;\n\n  @media screen and (min-width: 1280px) {\n    width: 263px;\n  }\n\n  &:not(:last-child) {\n    margin-bottom: 26px;\n\n    @media screen and (min-width: 1280px) {\n      margin-bottom: 28px;\n    }\n  }\n\n  &::before {\n    position: absolute;\n    color: ${colors.fontGray};\n    opacity: 0.5;\n    right: 18px;\n  }\n\n  & label {\n    font-family: 'Lato';\n  }\n`;\n\nexport const Select = styled.select`\n  width: 200px;\n  height: 35px;\n  padding: 5px 21px;\n\n  font-size: 14px;\n  cursor: pointer;\n\n  border: 2px solid RGBA(69, 65, 62, 0.5);\n  border-radius: 20px;\n  appearance: none;\n\n  color: ${colors.fontGray};\n  background-color: transparent;\n`;\n\nexport const ColorPickerButton = styled.input`\n  appearance: none;\n  background-color: #fff;\n  color: ${props => props.value};\n  background-color: ${props => props.value};\n  width: 17px;\n  height: 17px;\n  border-radius: 50%;\n\n  &:checked {\n    border: 3px solid ${colors.fontGray};\n  }\n\n  &:not(:last-child) {\n    margin-right: 7px;\n  }\n`;\n\nexport const ResultCounter = styled.p`\n  text-align: center;\n`;\n","import styled from '@emotion/styled';\nimport { colors } from 'styles/common/vars';\n\nexport const ItemCounterWrapper = styled.div`\n  width: 109px;\n  height: 39px;\n  padding: 0 10px;\n  margin-bottom: 28px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border-radius: 20px;\n\n  border: 2px solid ${colors.desert};\n\n  @media screen and (min-width: 1280px) {\n    margin-bottom: 0;\n  }\n`;\n\nexport const CounterInput = styled.input`\n  width: 100%;\n  padding: 2px 5px 0;\n  background-color: transparent;\n  border: none;\n  text-align: center;\n  appearance: textfield;\n\n  &::-webkit-outer-spin-button,\n  &::-webkit-inner-spin-button {\n    appearance: none;\n    margin: 0;\n  }\n`;\n\nexport const CounterButton = styled.button`\n  padding: 0 10px;\n\n  font-size: 18px;\n  line-height: 1.2;\n  font-weight: 900;\n  color: ${colors.gray};\n  border: none;\n  background-color: transparent;\n`;\n","import {\n  CounterButton,\n  CounterInput,\n  ItemCounterWrapper,\n} from './ItemCounter.styled';\nimport PropTypes from 'prop-types';\n\nconst ItemCounter = ({ orderQuantity, setOrderQuantity }) => {\n  const handleChangeQuantity = type => {\n    if (type === 'decrement') {\n      setOrderQuantity(orderQuantity - 1);\n      return;\n    }\n\n    setOrderQuantity(orderQuantity + 1);\n    return;\n  };\n\n  const handleInputChange = event => {\n    if (Number(event.target.value) <= 0) return;\n\n    setOrderQuantity(Number(event.target.value));\n  };\n\n  return (\n    <ItemCounterWrapper>\n      <CounterButton\n        type=\"button\"\n        disabled={orderQuantity <= 1}\n        onClick={() => {\n          handleChangeQuantity('decrement');\n        }}\n      >\n        -\n      </CounterButton>\n      <CounterInput\n        type=\"number\"\n        name=\"quantity\"\n        min={0}\n        value={orderQuantity}\n        onChange={handleInputChange}\n      />\n      <CounterButton\n        type=\"button\"\n        onClick={() => {\n          handleChangeQuantity('increment');\n        }}\n      >\n        +\n      </CounterButton>\n    </ItemCounterWrapper>\n  );\n};\n\nexport default ItemCounter;\n\nItemCounter.propTypes = {\n  orderQuantity: PropTypes.number.isRequired,\n  setOrderQuantity: PropTypes.func.isRequired,\n};\n","import {\n  Image,\n  BasicCard,\n  BasicDescription,\n  BasicLabel,\n  BasicTitle,\n} from './BasicTile.styled';\nimport PropTypes from 'prop-types';\n\nconst BasicTile = ({ item: { imageUrl, title, label } }) => {\n  return (\n    <BasicCard>\n      <Image src={imageUrl} alt={title} width=\"270px\" />\n      <BasicDescription>\n        <BasicTitle>{title}</BasicTitle>\n        <BasicLabel>{label}</BasicLabel>\n      </BasicDescription>\n    </BasicCard>\n  );\n};\n\nexport default BasicTile;\n\nBasicTile.propTypes = {\n  item: PropTypes.exact({\n    id: PropTypes.string,\n    title: PropTypes.string.isRequired,\n    imageUrl: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    price: PropTypes.number,\n    buyNow: PropTypes.bool,\n    description: PropTypes.string,\n    comment: PropTypes.object,\n  }).isRequired,\n};\n","import styled from '@emotion/styled';\nimport { colors } from 'styles/common/vars';\n\nexport const BasicCard = styled.li`\n  position: relative;\n  width: 270px;\n  height: 368px;\n  border-radius: 6px;\n  overflow: hidden;\n  text-align: center;\n`;\n\nexport const Image = styled.img`\n  width: 100%;\n  height: 261px;\n`;\n\nexport const BasicDescription = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n\n  width: 100%;\n  height: 107px;\n  padding: 20px;\n\n  background-color: ${colors.primaryWhite};\n`;\n\nexport const BasicTitle = styled.h4`\n  color: ${colors.fontGray};\n`;\n\nexport const BasicLabel = styled.p`\n  font-size: 14px;\n  font-weight: 900;\n  text-transform: capitalize;\n  color: ${colors.accentGreen};\n`;\n","import styled from '@emotion/styled';\nimport { BasicCard } from './BasicTile.styled';\n\nexport const MobileCard = styled(BasicCard)`\n  width: 100%;\n  height: 100%;\n\n  &::marker {\n    display: none;\n  }\n`;\n","import { BasicDescription, BasicTitle, Image } from './BasicTile.styled';\nimport { MobileCard } from './MobileGalleryTile.styled';\nimport { Price } from './PricedTile.styled';\nimport PropTypes from 'prop-types';\n\nconst MobileGalleryTile = ({ item: { imageUrl, title, price } }) => {\n  return (\n    <MobileCard>\n      <Image src={imageUrl} alt={title} width=\"270px\" />\n      <BasicDescription>\n        <BasicTitle>{title}</BasicTitle>\n        <Price>$ {price}</Price>\n      </BasicDescription>\n    </MobileCard>\n  );\n};\n\nexport default MobileGalleryTile;\n\nMobileGalleryTile.propTypes = {\n  item: PropTypes.exact({\n    id: PropTypes.string,\n    title: PropTypes.string.isRequired,\n    imageUrl: PropTypes.string.isRequired,\n    price: PropTypes.number.isRequired,\n    buyNow: PropTypes.bool,\n    label: PropTypes.string,\n    description: PropTypes.string,\n    comment: PropTypes.object,\n  }).isRequired,\n};\n","import styled from '@emotion/styled';\nimport { BasicCard, BasicDescription } from './BasicTile.styled';\nimport { colors, transition } from 'styles/common/vars';\n\nexport const PricedCard = styled(BasicCard)`\n  &:hover,\n  &:focus {\n    .overlay {\n      opacity: 1;\n      transform: translateY(0);\n    }\n  }\n`;\n\nexport const PricedDescription = styled(BasicDescription)`\n  padding-bottom: 20px;\n\n  .overlay {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: RGBA(35, 196, 110, 0.8);\n    opacity: 0;\n\n    transform: translateY(-100%);\n\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 19px;\n\n    transition: opacity ${transition.duration}, transform ${transition.duration};\n  }\n`;\n\nexport const AddButton = styled.button`\n  display: block;\n  width: 93px;\n  height: 93px;\n  border-radius: 50%;\n  padding: 29px;\n  padding-top: 33px;\n\n  border: none;\n\n  text-align: center;\n  font-size: 31px;\n\n  background-color: ${colors.primaryWhite};\n\n  transition: opacity ${transition.duration};\n  &:hover,\n  &:focus {\n    opacity: 0.6;\n  }\n`;\n\nexport const Price = styled.p`\n  color: #011847;\n`;\n","import styled from '@emotion/styled';\nimport { colors } from 'styles/common/vars';\n\nexport const PopularItemsSection = styled.section`\n  padding-top: 20px;\n  padding-bottom: 64px;\n  background-color: ${colors.desert};\n\n  @media screen and (min-width: 1280px) {\n    padding-top: 26px;\n    padding-bottom: 59px;\n  }\n`;\n\nexport const SectionTitle = styled.h2`\n  display: flex;\n  gap: 10px;\n  align-items: center;\n  justify-content: space-between;\n\n  margin-bottom: 24px;\n\n  font-size: 16px;\n  text-transform: uppercase;\n\n  @media screen and (min-width: 1280px) {\n    font-size: 24px;\n  }\n\n  &::before,\n  &::after {\n    content: '';\n    display: block;\n    background-color: ${colors.fontGray};\n    opacity: 0.1;\n    flex-grow: 1;\n    height: 3px;\n  }\n`;\n\nexport const ItemsList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: center;\n  gap: 27px;\n`;\n","import ImageGallery from 'react-image-gallery';\nimport {\n  ItemsList,\n  PopularItemsSection,\n  SectionTitle,\n} from './PopularItems.styled';\nimport useWindowDimensions from 'hooks/useWindowDimensions';\nimport MobileGalleryTile from 'components/ProductTiles/MobileGalleryTile';\nimport { useProducts } from 'context/ProductsContext';\nimport BasicTile from 'components/ProductTiles/BasicTile';\n\nconst PopularItems = () => {\n  const { allProducts } = useProducts();\n  const { width } = useWindowDimensions();\n  const isMobileScreen = width < 768;\n\n  const galleryItems = allProducts.slice(0, 4).map(item => {\n    return { original: '', description: <MobileGalleryTile item={item} /> };\n  });\n\n  return (\n    <PopularItemsSection>\n      <SectionTitle>Popular items</SectionTitle>\n      {isMobileScreen ? (\n        <ul>\n          <ImageGallery\n            additionalClass=\"popular-items dark-bullets\"\n            originalWidth=\"100%\"\n            originalHeight=\"250px\"\n            showNav={false}\n            showThumbnails={false}\n            showFullscreenButton={false}\n            showPlayButton={false}\n            showBullets={true}\n            items={galleryItems}\n          />\n        </ul>\n      ) : (\n        <ItemsList>\n          {allProducts.slice(0, 4).map(item => (\n            <BasicTile item={item} key={item.imageUrl} />\n          ))}\n        </ItemsList>\n      )}\n    </PopularItemsSection>\n  );\n};\n\nexport default PopularItems;\n","import styled from '@emotion/styled';\nimport { colors } from 'styles/common/vars';\n\nexport const ProductDetailedMain = styled.main`\n  background-color: ${colors.desert};\n`;\n\nexport const ProductDetailsSection = styled.section`\n  padding: 26px 14px;\n`;\n\nexport const ProductTitle = styled.h1`\n  margin-bottom: 64px;\n\n  font-size: 31px;\n  font-weight: 900;\n  text-align: center;\n\n  @media screen and (min-width: 1280px) {\n    font-size: 48px;\n    margin-bottom: 49px;\n  }\n`;\n\nexport const ProductInfoWrapper = styled.div`\n  background-color: ${colors.primaryWhite};\n  border-bottom-left-radius: 6px;\n  border-bottom-right-radius: 6px;\n\n  @media screen and (min-width: 1280px) {\n    display: flex;\n    flex-wrap: wrap;\n    column-gap: 68px;\n    row-gap: 76px;\n  }\n\n  @media print {\n    display: flex;\n    padding: 20px;\n\n    .image-gallery {\n      width: 800px;\n    }\n\n    section {\n      width: 375px;\n    }\n  }\n`;\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\nimport { colors, transition } from 'styles/common/vars';\n\nexport const TabsSection = styled.section`\n  display: none;\n  width: 100%;\n  padding: 0;\n\n  @media screen and (min-width: 1280px) {\n    display: block;\n  }\n`;\n\nexport const TabsList = styled.ul`\n  display: flex;\n  margin: 0 auto;\n  gap: 0;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const TabListItem = styled.li`\n  padding: 24px 0;\n`;\n\nexport const TabLink = styled(NavLink)`\n  font-size: 24px;\n  padding: 24px 52px;\n  color: ${colors.gray};\n  border-top-right-radius: 24px;\n  border-top-left-radius: 24px;\n  transition: background-color ${transition.duration};\n\n  &.active {\n    color: ${colors.primaryWhite};\n    background-color: ${colors.primaryBg};\n  }\n`;\n\nexport const TabInfoWrapper = styled.div`\n  display: flex;\n  gap: 85px;\n  padding: 70px;\n  width: 100%;\n\n  color: ${colors.primaryWhite};\n  background-color: ${colors.primaryBg};\n`;\n","import { Suspense } from 'react';\nimport {\n  TabInfoWrapper,\n  TabLink,\n  TabListItem,\n  TabsList,\n  TabsSection,\n} from './ProductTabs.styled';\nimport { Outlet } from 'react-router-dom';\nimport LoadingSpinner from 'components/Global/LoadingSpinner';\n\nconst ProductTabs = () => {\n  return (\n    <TabsSection>\n      <TabsList>\n        <TabListItem>\n          <TabLink to=\"description\">Description</TabLink>\n        </TabListItem>\n        <TabListItem>\n          <TabLink to=\"additional-information\">Additional information</TabLink>\n        </TabListItem>\n        <TabListItem>\n          <TabLink to=\"reviews\">Reviews (2)</TabLink>\n        </TabListItem>\n      </TabsList>\n      <TabInfoWrapper>\n        <Suspense fallback={<LoadingSpinner />}>\n          <Outlet />\n        </Suspense>\n      </TabInfoWrapper>\n    </TabsSection>\n  );\n};\n\nexport default ProductTabs;\n","import styled from '@emotion/styled';\nimport { LoadMoreButton } from 'components/CategoryLanding/CategoryItemsList.styled';\nimport { Select } from 'components/CategoryLanding/Filters.styled';\nimport { colors, transition } from 'styles/common/vars';\n\nexport const ProductPrice = styled.h2`\n  font-size: 31px;\n  margin-bottom: 28px;\n\n  @media screen and (min-width: 1280px) {\n    font-size: 48px;\n  }\n`;\n\nexport const ProductInfo = styled.section`\n  padding: 0 11px 27px;\n\n  @media screen and (min-width: 1280px) {\n    padding-top: 47px;\n    width: 347px;\n  }\n`;\n\nexport const SelectWrapper = styled.div`\n  position: relative;\n  display: inline-flex;\n  align-items: center;\n  justify-content: space-between;\n  flex-shrink: 1;\n\n  &::before {\n    position: absolute;\n    right: 18px;\n    top: 10px;\n    opacity: 0.5;\n    color: ${colors.fontGray};\n  }\n\n  &::after {\n    content: '';\n    position: absolute;\n    top: 8px;\n    left: 8px;\n    width: 23px;\n    height: 23px;\n    border-radius: 50%;\n    background-color: ${props => props.selectedColor};\n  }\n`;\n\nexport const ColorSelect = styled(Select)`\n  width: 155px;\n  height: 39px;\n  padding-left: 43px;\n  margin-bottom: 25px;\n  border-color: ${colors.desert};\n`;\n\nexport const AddToCartWrapper = styled.div`\n  margin-bottom: 34px;\n\n  @media screen and (min-width: 1280px) {\n    display: flex;\n    gap: 21px;\n    margin-bottom: 50px;\n\n    button {\n      margin: 0;\n    }\n  }\n`;\n\nexport const AddToCart = styled(LoadMoreButton)`\n  border-color: ${colors.desert};\n  margin: 0;\n`;\n\nexport const ButtonsList = styled.ul`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  margin-bottom: 34px;\n`;\n\nexport const ShowMoreButton = styled.button`\n  color: ${colors.accentGreen};\n  background-color: transparent;\n  border: none;\n  padding: 0;\n\n  &:hover,\n  &:focus {\n    color: ${colors.accentBlue};\n    text-decoration: underline;\n  }\n`;\n\nexport const PrintButton = styled.button`\n  background-color: transparent;\n  border: none;\n  padding: 0;\n  font-size: 24px;\n\n  color: ${colors.accentGreen};\n\n  transition: color ${transition.duration};\n\n  &:hover,\n  &:focus {\n    color: ${colors.accentBlue};\n  }\n\n  @media print {\n    display: none;\n  }\n`;\n\nexport const Description = styled.p`\n  margin-bottom: 12px;\n`;\n\nexport const ShareIconsWrapper = styled.div`\n  display: flex;\n  gap: 32px;\n\n  ul {\n    margin: 0;\n  }\n`;\n","import { useProducts } from 'context/ProductsContext';\nimport {\n  AddToCart,\n  AddToCartWrapper,\n  ButtonsList,\n  ColorSelect,\n  Description,\n  PrintButton,\n  ProductInfo,\n  ProductPrice,\n  SelectWrapper,\n  ShareIconsWrapper,\n  ShowMoreButton,\n} from './ProductData.styled';\nimport PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport SocialIconsList from 'components/Global/Footer/SocialIconsList';\nimport ItemCounter from 'components/Global/ItemCounter';\nimport ReactToPrint from 'react-to-print';\nimport { notification } from 'components/Global/notification';\n\nconst ProductData = ({ item, componentToPrint }) => {\n  const { reducer } = useProducts();\n  const [selectedColor, setSelectedColor] = useState('#999999');\n  const [orderQuantity, setOrderQuantity] = useState(1);\n  const [limitText, setLimitText] = useState(false);\n\n  const showLimitedText = () => {\n    if (limitText) return item.description;\n\n    return item.description.substring(0, 100) + '...';\n  };\n\n  const handleAddToCart = () => {\n    const response = reducer(`cart/add`, { ...item, orderQuantity });\n\n    if (response) return notification(response);\n\n    notification(`Item \"${item.title}\" has been added to your cart`, 'success');\n  };\n\n  return (\n    <ProductInfo>\n      <ProductPrice>${item.price}</ProductPrice>\n      <SelectWrapper className=\"icon-caret-down\" selectedColor={selectedColor}>\n        <ColorSelect\n          onChange={e => {\n            setSelectedColor(e.target.value);\n          }}\n        >\n          <option value=\"#999999\">Dark Gray</option>\n          <option value=\"#43C0CF\">Sky Blue</option>\n        </ColorSelect>\n      </SelectWrapper>\n      <AddToCartWrapper>\n        <ItemCounter\n          orderQuantity={orderQuantity}\n          setOrderQuantity={setOrderQuantity}\n        />\n        <AddToCart type=\"button\" onClick={handleAddToCart}>\n          Add to cart\n        </AddToCart>\n      </AddToCartWrapper>\n      <Description>{showLimitedText()}</Description>\n      <ButtonsList>\n        <li>\n          <ShowMoreButton\n            type=\"button\"\n            onClick={() => {\n              setLimitText(!limitText);\n            }}\n          >\n            {limitText ? 'Show less' : 'Show more'}\n          </ShowMoreButton>\n        </li>\n        <li>\n          <ReactToPrint\n            trigger={() => (\n              <PrintButton className=\"icon-printer\" type=\"button\" />\n            )}\n            content={() => componentToPrint.current}\n          />\n        </li>\n      </ButtonsList>\n      <ShareIconsWrapper>\n        Share\n        <SocialIconsList />\n      </ShareIconsWrapper>\n    </ProductInfo>\n  );\n};\n\nexport default ProductData;\n\nProductData.propTypes = {\n  item: PropTypes.objectOf({\n    title: PropTypes.string.isRequired,\n    price: PropTypes.number.isRequired,\n    description: PropTypes.string.isRequired,\n  }).isRequired,\n  componentToPrint: PropTypes.objectOf({ current: PropTypes.element }),\n};\n","export const productDetailsImages = [\n  {\n    original:\n      ' https://osf-store.onrender.com/api/products/images/product-black-front.jpg',\n    thumbnail:\n      ' https://osf-store.onrender.com/api/products/images/product-black-front.jpg',\n  },\n  {\n    original:\n      ' https://osf-store.onrender.com/api/products/images/product-black-back.jpg',\n    thumbnail:\n      ' https://osf-store.onrender.com/api/products/images/product-black-back.jpg',\n  },\n  {\n    original:\n      ' https://osf-store.onrender.com/api/products/images/product-sky-blue-front.jpg',\n    thumbnail:\n      ' https://osf-store.onrender.com/api/products/images/product-sky-blue-front.jpg',\n  },\n  {\n    original:\n      ' https://osf-store.onrender.com/api/products/images/product-sky-blue-back.jpg',\n    thumbnail:\n      ' https://osf-store.onrender.com/api/products/images/product-sky-blue-back.jpg',\n  },\n];\n","import ImageGallery from 'react-image-gallery';\nimport { productDetailsImages } from 'data/productDetails';\nimport useWindowDimensions from 'hooks/useWindowDimensions';\n\nconst ProductGallery = () => {\n  const { width } = useWindowDimensions();\n  const isMobileScreen = width < 768;\n\n  return (\n    <ImageGallery\n      additionalClass=\"product-details\"\n      items={productDetailsImages}\n      thumbnailPosition={isMobileScreen ? 'bottom' : 'right'}\n      showThumbnails={true}\n      showPlayButton={false}\n      showNav={false}\n      showBullets={isMobileScreen}\n    />\n  );\n};\n\nexport default ProductGallery;\n","import {\n  ProductDetailsSection,\n  ProductInfoWrapper,\n  ProductTitle,\n} from './ProductDetails.styled';\nimport ProductTabs from './ProductTabs';\nimport ProductData from './ProductData';\nimport ProductGallery from './ProductGallery';\nimport { useRef } from 'react';\nimport LoadingSpinner from 'components/Global/LoadingSpinner';\nimport PropTypes from 'prop-types';\n\nconst ProductDetails = ({ item }) => {\n  const componentToPrint = useRef();\n\n  if (!item) {\n    return <LoadingSpinner />;\n  }\n\n  return (\n    <ProductDetailsSection>\n      <ProductTitle>{item.title}</ProductTitle>\n\n      <ProductInfoWrapper ref={componentToPrint}>\n        <ProductGallery />\n        <ProductData item={item} componentToPrint={componentToPrint} />\n        <ProductTabs />\n      </ProductInfoWrapper>\n    </ProductDetailsSection>\n  );\n};\n\nexport default ProductDetails;\n\nProductDetails.propTypes = {\n  item: PropTypes.objectOf({\n    title: PropTypes.string.isRequired,\n    price: PropTypes.number.isRequired,\n    description: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import styled from '@emotion/styled';\nimport { LoadMoreButton } from 'components/CategoryLanding/CategoryItemsList.styled';\n\nexport const ScrollToTopSection = styled.section`\n  padding: 34px 0 50px;\n`;\n\nexport const ScrollToTopButton = styled(LoadMoreButton)`\n  display: block;\n  margin: 0 auto;\n\n  @media screen and (min-width: 1280px) {\n    display: none;\n  }\n`;\n","import { ScrollToTopButton, ScrollToTopSection } from './ScrollToTop.styled';\n\nconst ScrollToTop = () => {\n  const handleScrollToTop = () => {\n    window.scrollTo({ top: 0 });\n  };\n\n  return (\n    <ScrollToTopSection>\n      <ScrollToTopButton type=\"button\" onClick={handleScrollToTop}>\n        Scroll to top\n      </ScrollToTopButton>\n    </ScrollToTopSection>\n  );\n};\n\nexport default ScrollToTop;\n","import BreadCrumbs from 'components/CategoryLanding/BreadCrumbs';\nimport PopularItems from 'components/ProductDetailed/PopularItems';\nimport ProductDetails from 'components/ProductDetailed/ProductDetails';\nimport { ProductDetailedMain } from 'components/ProductDetailed/ProductDetails.styled';\nimport ScrollToTop from 'components/ProductDetailed/ScrollToTop';\nimport { useProducts } from 'context/ProductsContext';\nimport { useParams } from 'react-router-dom';\n\nconst ProductDetailed = () => {\n  const { allProducts } = useProducts();\n  const { productId } = useParams();\n\n  return (\n    <ProductDetailedMain>\n      <BreadCrumbs padding={['26px 0 0', '48px 0 0']} />\n      <ProductDetails item={allProducts.find(({ id }) => id === productId)} />\n      <PopularItems />\n      <ScrollToTop />\n    </ProductDetailedMain>\n  );\n};\n\nexport default ProductDetailed;\n"],"names":["productTitle","useParams","location","useLocation","locationPath","name","pathName","pathNames","pathname","split","filter","push","forEach","replace","BreadCrumbsSection","styled","props","padding","HistoryList","colors","HistoryListItem","useLocationPath","map","to","CategoryListSection","CategoryList","LoadMoreButton","transition","FilterSection","ToggleFilterButton","FilterForm","SelectWrapper","Select","ColorPickerButton","value","ResultCounter","ItemCounterWrapper","CounterInput","CounterButton","orderQuantity","setOrderQuantity","handleChangeQuantity","type","disabled","onClick","min","onChange","event","Number","target","item","imageUrl","title","label","src","alt","width","BasicCard","Image","BasicDescription","BasicTitle","BasicLabel","MobileCard","price","PricedCard","PricedDescription","AddButton","Price","PopularItemsSection","SectionTitle","ItemsList","allProducts","useProducts","isMobileScreen","useWindowDimensions","galleryItems","slice","original","description","MobileGalleryTile","additionalClass","originalWidth","originalHeight","showNav","showThumbnails","showFullscreenButton","showPlayButton","showBullets","items","BasicTile","ProductDetailedMain","ProductDetailsSection","ProductTitle","ProductInfoWrapper","TabsSection","TabsList","TabListItem","TabLink","NavLink","TabInfoWrapper","Suspense","fallback","LoadingSpinner","ProductPrice","ProductInfo","selectedColor","ColorSelect","AddToCartWrapper","AddToCart","ButtonsList","ShowMoreButton","PrintButton","Description","ShareIconsWrapper","componentToPrint","reducer","useState","setSelectedColor","limitText","setLimitText","className","e","ItemCounter","response","notification","substring","trigger","content","current","SocialIconsList","productDetailsImages","thumbnail","thumbnailPosition","useRef","ref","ScrollToTopSection","ScrollToTopButton","window","scrollTo","top","productId","BreadCrumbs","find","id"],"sourceRoot":""}